name: Tests and release

on:
  push:
    tags:
      - "v*"

env:
  CRATE_NAME: repo2txt-r
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1

jobs:
  test:
    name: ${{ matrix.os_name }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: repo2txt-r
          - os_name: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            bin: repo2txt-r
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: repo2txt-r.exe
          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: repo2txt-r.exe
          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: repo2txt-r
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: repo2txt-r
    env:
      SKIP_TESTS_OS_NAMES: Windows-aarch64 macOS-aarch64
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      - name: Configure Git
        run: |
          git config --global user.email "jdoe@example.com"
          git config --global user.name "J. Doe"
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.target, 'musl')
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.target }}
          toolchain: stable
          args: "--release"
          strip: true
      - name: Run tests
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "test"
          target: ${{ matrix.target }}
          toolchain: stable
          args: "--release"
        if: ${{ !contains(env.SKIP_TESTS_OS_NAMES, matrix.os_name) }}
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a ../../../repo2txt-r-${{ matrix.os_name }}.zip ${{ matrix.bin }}
          else
            tar czvf ../../../repo2txt-r-${{ matrix.os_name }}.tar.gz ${{ matrix.bin }}
          fi
          cd -
        if: |
          github.ref_name == 'refs/tags/test-release' || startsWith(github.ref, 'refs/tags/v')
      - name: Publish release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: repo2txt-r-${{ matrix.os_name }}
          path: "repo2txt-r-${{ matrix.os_name }}.*"
        if: github.ref == 'refs/tags/test-release'
      - name: Generate SHA-256
        run: shasum -a 256 repo2txt-r-${{ matrix.os_name }}.*
        if: |
          matrix.os == 'macOS-latest' &&
          ( startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/tags/test-release' )
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: "repo2txt-r-${{ matrix.os_name }}.*"
        if: startsWith(github.ref, 'refs/tags/v')
